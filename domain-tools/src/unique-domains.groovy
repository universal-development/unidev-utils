/**
 * Copyright (c) 2016 Denis O <denis@universal-development.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * 1.0.0
 * Filter url list  by unique domain
 * groovy script.groovy list.txt
 * Output:
 *  <output>/<success.txt>/filtered.txt
 */


@GrabResolver(name = 'repository', root = 'http://ci.decafdev.local/nexus/content/groups/public')

@Grab('com.unidev.platform:platform-common:1.2.0')
@Grab('com.unidev.platform:platform-statistics-simple:1.0.0')

Set<String> hostCache = new HashSet<>();


import com.unidev.platform.statistics.StatisticsManager
import com.unidev.platform.utils.StringUtils
import org.codehaus.groovy.util.StringUtil
import org.slf4j.Logger
import org.slf4j.LoggerFactory
import org.springframework.context.support.ClassPathXmlApplicationContext

ctx = new ClassPathXmlApplicationContext("classpath:/platform-common-beans.xml");
StatisticsManager statisticsManager = ctx.getBean(StatisticsManager.class);
StringUtils stringUtils = ctx.getBean(StringUtils.class);

Logger LOG = LoggerFactory.getLogger("")

String fileName = args[0];
LOG.info("processing {}", fileName)

File file = new File(fileName);

if (!file.exists()) {
    LOG.warn("Failed to open {}", fileName);
    System.exit(-1)
}

new File("output/" + fileName).mkdirs();
File outputFile = new File("output/" + fileName + "/filtered.txt");

file.eachLine { line ->

    String[] split = StringUtils.split(line, " ")
    String uriStr = split[0];
    // some url links generated by some programs can't be readed with URI/URL so we just parse value between // - /
    String host = stringUtils.getValueBetween(uriStr, "//", "/");
    if (hostCache.contains(host)) {
        statisticsManager.add("same-host");
        return;
    }
    hostCache.add(host);

    outputFile.append(line + "\n")
    statisticsManager.add("ok-lines");

}

LOG.info("done {}", fileName)
LOG.info("Statistics {}", statisticsManager)

